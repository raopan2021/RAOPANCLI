// 删除目录里的node_modules文件夹
import fs from 'fs-extra';
import { print, printError, printSuccess } from '../utils/print.js';

const deleteNFolder = (path) => {
    try {
        if (fs.existsSync(path)) {
            fs.readdirSync(path).forEach((file) => {
                const curPath = path + '/' + file;
                if (fs.lstatSync(curPath).isDirectory()) {
                    deleteNFolder(curPath);
                } else {
                    try {
                        fs.unlinkSync(curPath); // 删除文件
                    } catch (error) {
                        printError('删除文件失败   ' + curPath);
                    }
                }
            });
            try {
                fs.rmdirSync(path); // 删除空文件夹
            } catch (error) {
                printError('删除文件夹失败 ' + path);
            }
        }
    } catch (error) {
        printError('删除文件夹失败 ' + path);
    }
};

// 遍历目录里是否有 node_modules 文件夹，有则删除
const search_node_modules = (path) => {
    try {
        if (fs.existsSync(path)) {
            fs.readdirSync(path).forEach((file) => {
                const curPath = path + '/' + file;
                if (fs.lstatSync(curPath).isDirectory()) {
                    if (curPath.includes('node_modules')) {
                        try {
                            deleteNFolder(curPath);
                            printSuccess('删除成功 ' + curPath);
                        } catch (error) {
                            printError('删除文件夹失败 ' + curPath);
                        }
                    } else {
                        search_node_modules(curPath);
                    }
                }
            });
        }
    } catch (error) {
        printError('遍历文件夹失败 ' + path);
    }
};

const deleteNodeModules = () => {
    const dirPath = process.cwd();
    try {
        search_node_modules(dirPath);
        print('删除成功');
    } catch (error) {
        printError('删除报错' + dirPath);
    }
};

export default deleteNodeModules;
